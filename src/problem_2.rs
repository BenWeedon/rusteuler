//! > Each new term in the Fibonacci sequence is generated by adding the
//! previous two terms. By starting with 1 and 2, the first 10 terms will be:
//! >
//! > 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//! >
//! > By considering the terms in the Fibonacci sequence whose values do not
//! exceed four million, find the sum of the even-valued terms.
//!
//! This solution generates the Fibonacci sequence from 1 to 4 million, summing
//! up all the even numbers along the way.
//!
//! ```
//! # let solution = rusteuler::problem_2::run().unwrap();
//! assert_eq!(solution, 4613732);
//! ```

pub fn run() -> Result<u64, String> {
    const MAX_VAL: u64 = 4_000_000;
    let mut n1 = 1;
    let mut n2 = 2;
    let mut sum = n2;
    loop {
        let n3 = n1 + n2;
        if n3 > MAX_VAL {
            break;
        }
        sum += if n3 % 2 == 0 { n3 } else { 0 };
        n1 = n2;
        n2 = n3;
    }
    Ok(sum)
}
